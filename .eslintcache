[{"/Users/nichantal/Desktop/web-final-frontend/src/views/signup.jsx":"1","/Users/nichantal/Desktop/web-final-frontend/src/index.js":"2","/Users/nichantal/Desktop/web-final-frontend/src/components/navbar.jsx":"3","/Users/nichantal/Desktop/web-final-frontend/src/views/signin.jsx":"4","/Users/nichantal/Desktop/web-final-frontend/src/views/home.jsx":"5","/Users/nichantal/Desktop/web-final-frontend/src/views/movieList.jsx":"6","/Users/nichantal/Desktop/web-final-frontend/src/components/pageBase.jsx":"7","/Users/nichantal/Desktop/web-final-frontend/src/components/copyright.jsx":"8","/Users/nichantal/Desktop/web-final-frontend/src/components/movieCard.jsx":"9","/Users/nichantal/Desktop/web-final-frontend/src/views/movie.jsx":"10","/Users/nichantal/Desktop/web-final-frontend/src/components/review.jsx":"11","/Users/nichantal/Desktop/web-final-frontend/src/views/profile.jsx":"12"},{"size":6830,"mtime":1608073937869,"results":"13","hashOfConfig":"14"},{"size":930,"mtime":1608012510787,"results":"15","hashOfConfig":"14"},{"size":3249,"mtime":1608071569432,"results":"16","hashOfConfig":"14"},{"size":5991,"mtime":1608066830646,"results":"17","hashOfConfig":"14"},{"size":1721,"mtime":1608073351638,"results":"18","hashOfConfig":"14"},{"size":1615,"mtime":1608065881764,"results":"19","hashOfConfig":"14"},{"size":363,"mtime":1608063138520,"results":"20","hashOfConfig":"14"},{"size":406,"mtime":1608065598985,"results":"21","hashOfConfig":"14"},{"size":1471,"mtime":1608065775532,"results":"22","hashOfConfig":"14"},{"size":12231,"mtime":1608071083261,"results":"23","hashOfConfig":"14"},{"size":2848,"mtime":1608071206660,"results":"24","hashOfConfig":"14"},{"size":5947,"mtime":1608065657030,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hpas40",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nichantal/Desktop/web-final-frontend/src/views/signup.jsx",[],"/Users/nichantal/Desktop/web-final-frontend/src/index.js",[],"/Users/nichantal/Desktop/web-final-frontend/src/components/navbar.jsx",["52","53"],"import React, { useState, useEffect } from \"react\";\nimport {\n  fade,\n  makeStyles,\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  IconButton,\n} from \"@material-ui/core\";\nimport SearchBar from \"material-ui-search-bar\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appbar: {\n    background: \"#84C7CE\",\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n}));\n\nfunction NavBar() {\n  const classes = useStyles();\n\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [searchValue, setSearchValue] = useState(null);\n\n  let history = useHistory();\n\n  useEffect(() => {\n    const username = localStorage.getItem(\"username\");\n    if (username) {\n      setIsSignedIn(true);\n    }\n  }, []);\n\n  function handleSignOut() {\n    setIsSignedIn(false);\n    localStorage.clear();\n    window.location.reload();\n  }\n\n  function onSignUpClick(e) {\n    e.preventDefault();\n    history.push(\"/signup\");\n  }\n\n  function onSignInClick(e) {\n    e.preventDefault();\n    history.push(\"/signin\");\n  }\n\n  function onProfileClick(e) {\n    e.preventDefault();\n    history.push(\"/profile\");\n  }\n\n  function onSearchClick() {\n    if (searchValue == null || searchValue.length === 0) {\n      return;\n    }\n    history.push(\"/movieList\" + searchValue);\n  }\n\n  function onTitleClick() {\n    history.push(\"/\");\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appbar}>\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\">\n            Movie Review\n          </Typography>\n          <SearchBar\n            className={classes.search}\n            onChange={(e) => setSearchValue(e)}\n            onRequestSearch={() => onSearchClick()}\n          />\n          {isSignedIn ? (\n            <div>\n              <Button color=\"inherit\" onClick={(e) => handleSignOut(e)}>\n                SignOut\n              </Button>\n              <IconButton\n                aria-label=\"profile\"\n                color=\"inherit\"\n                onClick={(e) => onProfileClick(e)}\n              >\n                <AccountCircleIcon />\n              </IconButton>\n            </div>\n          ) : (\n            <div>\n              <Button\n                color=\"inherit\"\n                onClick={(e) => {\n                  onSignInClick(e);\n                }}\n              >\n                SignIn\n              </Button>\n              <Button\n                color=\"inherit\"\n                onClick={(e) => {\n                  onSignUpClick(e);\n                }}\n              >\n                SignUp\n              </Button>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","/Users/nichantal/Desktop/web-final-frontend/src/views/signin.jsx",[],"/Users/nichantal/Desktop/web-final-frontend/src/views/home.jsx",["54"],"/Users/nichantal/Desktop/web-final-frontend/src/views/movieList.jsx",["55"],"/Users/nichantal/Desktop/web-final-frontend/src/components/pageBase.jsx",[],"/Users/nichantal/Desktop/web-final-frontend/src/components/copyright.jsx",[],"/Users/nichantal/Desktop/web-final-frontend/src/components/movieCard.jsx",[],"/Users/nichantal/Desktop/web-final-frontend/src/views/movie.jsx",["56","57","58","59","60","61","62","63"],"import {\n  Card,\n  CardMedia,\n  makeStyles,\n  CardActionArea,\n  CardContent,\n  Typography,\n  CardActions,\n  TextField,\n  Button,\n  IconButton,\n  Box,\n  CssBaseline,\n  Container,\n  Grid,\n  ListItem,\n  List,\n} from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { useParams } from \"react-router-dom\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport Axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport PageBase from \"../components/pageBase.jsx\";\nimport Review from \"../components/review.jsx\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    display: \"block\",\n  },\n  reviewContainer: {\n    display: \"block\",\n    marginTop: theme.spacing(3),\n  },\n  card: {\n    position: \"relative\",\n    display: \"flex\",\n    height: 800,\n    overflow: \"hidden\",\n    borderRadius: 10,\n    boxShadow: \"0px 0px 120px -25px rgba(0,0,0, 0.5)\",\n    marginTop: theme.spacing(5),\n    marginLeft: theme.spacing(10),\n    marginRight: theme.spacing(10),\n  },\n  image: {\n    width: \"30%\",\n    height: \"80%\",\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(3),\n  },\n  info: {\n    position: \"relative\",\n    padding: 25,\n    display: \"block\",\n  },\n  rating: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nfunction Movie() {\n  const classes = useStyles();\n  const params = useParams();\n  const movieName = params.movieName;\n  const [inDatabase, setInDatabase] = useState(false);\n  const [movie, setMovie] = useState(null);\n  const [userRating, setUserRating] = useState(0);\n  const [userComment, setUserComment] = useState(\"\");\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [favorite, setFavorite] = useState(false);\n\n  useEffect(() => {\n    Axios.get(\n      \"https://movie-rating-server.herokuapp.com/api/movie/\" + movieName\n    )\n      .then((response) => {\n        if (response.data.results != null) {\n          for (let i = 0; i < response.data.results.length; i++) {\n            if (response.data.results[i].movieName === movieName) {\n              setMovie(response.data.results[i]);\n              break;\n            }\n          }\n        } else {\n          setInDatabase(true);\n          setMovie(response.data);\n        }\n      })\n      .catch((error) => console.log(error));\n\n    Axios.get(\n      \"https://movie-rating-server.herokuapp.com/api/movieReview/\" + movieName\n    )\n      .then((response) => {\n        let list = [];\n        if (response.data != null && response.data.length > 0) {\n          for (let i = 0; i < response.data.length; i++) {\n            list.push(response.data[i]);\n            if (\n              response.data[i].username === localStorage.getItem(\"username\")\n            ) {\n              setUserRating(response.data[i].rating);\n              setUserComment(response.data[i].comment);\n            }\n          }\n          setMovieReviews(list);\n        }\n      })\n      .catch((error) => console.log(error));\n\n    Axios.get(\n      \"https://movie-rating-server.herokuapp.com/api/user/favorites/\" +\n        localStorage.getItem(\"username\") +\n        \"/\" +\n        movieName\n    )\n      .then((response) => {\n        if (response.status === 200) {\n          setFavorite(true);\n        } else {\n          setFavorite(false);\n        }\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  const title = movie?.movieName ?? null;\n  const imgPath =\n    \"http://image.tmdb.org/t/p/original\" + movie?.posterPath ?? null;\n  const overView = movie?.overView ?? null;\n  const date = movie?.releaseDate ?? null;\n  const movieId = movie?.movieId ?? null;\n  const rating = movie?.externalRating;\n  const language = movie?.originalLanguage;\n\n  if (movie == null) {\n    return <></>;\n  }\n\n  function handleAdd(e) {\n    e.preventDefault();\n    Axios.post(\"https://movie-rating-server.herokuapp.com/api/movie\", {\n      movieName: movie.movieName,\n      externalRating: movie.externalRating,\n      posterPath: movie.posterPath,\n      movieId: movie.mivieId,\n      releaseDate: movie.releaseDate,\n      overView: movie.overView,\n      originalLanguage: movie.originalLanguage,\n    })\n      .then((response) => {\n        setInDatabase(true);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return;\n  }\n\n  function onReviewChange(e, newValue) {\n    e.preventDefault();\n    setUserRating(newValue);\n  }\n\n  function onCommentChange(e) {\n    e.preventDefault();\n    setUserComment(String(e.target.value));\n  }\n\n  function findReview() {\n    for (let i = 0; i < movieReviews.length; i++) {\n      if (movieReviews[i].username === localStorage.getItem(\"username\")) {\n        return movieReviews[i].rating;\n      }\n    }\n\n    return null;\n  }\n\n  function onReviewSubmit(e) {\n    e.preventDefault();\n\n    const prevRating = findReview();\n\n    if (prevRating !== null) {\n      Axios.delete(\n        \"https://movie-rating-server.herokuapp.com/api/movieReview\",\n        {\n          data: {\n            movieName: title,\n            username: localStorage.getItem(\"username\"),\n          },\n        }\n      )\n        .then((response) => {\n          Axios.put(\"https://movie-rating-server.herokuapp.com/api/movie/\", {\n            movieName: title,\n            rating: 0 - prevRating,\n          });\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n\n    Axios.post(\"https://movie-rating-server.herokuapp.com/api/movieReview\", {\n      username: localStorage.getItem(\"username\"),\n      movieId: movieId,\n      movieName: title,\n      rating: userRating,\n      comment: userComment,\n    })\n      .then(() => {\n        Axios.put(\"https://movie-rating-server.herokuapp.com/api/movie/\", {\n          movieName: title,\n          rating: userRating,\n        });\n        window.location.reload();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  function handleFavorite(e) {\n    e.preventDefault();\n    if (favorite) {\n      Axios.delete(\n        \"https://movie-rating-server.herokuapp.com/api/user/favorites\",\n        {\n          data: {\n            username: localStorage.getItem(\"username\"),\n            movieName: title,\n          },\n        }\n      )\n        .then(() => {\n          setFavorite(false);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      Axios.put(\n        \"https://movie-rating-server.herokuapp.com/api/user/favorites\",\n        {\n          username: localStorage.getItem(\"username\"),\n          movieName: title,\n        }\n      )\n        .then(() => {\n          setFavorite(true);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }\n\n  return (\n    <PageBase>\n      <div className={classes.root}>\n        <div className={classes.card}>\n          <img src={imgPath} alt=\"cover\" className={classes.image} />\n          <div className={classes.info}>\n            <Typography variant=\"h2\" component=\"h2\">\n              {title}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {language.toUpperCase()} | {date}\n            </Typography>\n            <div className={classes.rating}>\n              <Rating\n                name=\"read-only\"\n                value={rating}\n                readOnly\n                max={10}\n                precision={0.5}\n              />\n              {\n                <Box ml={1}>\n                  <Typography\n                    component=\"legend\"\n                    variant=\"h5\"\n                    style={{ color: \"#ffc107\" }}\n                  >\n                    {rating}\n                  </Typography>\n                </Box>\n              }\n            </div>\n            <Typography\n              style={{ paddingTop: 5 }}\n              variant=\"body1\"\n              color=\"textSecondary\"\n              component=\"p\"\n            >\n              {overView}\n            </Typography>\n            {inDatabase && localStorage.getItem(\"username\") ? (\n              <>\n                <Typography\n                  variant=\"h5\"\n                  component=\"h5\"\n                  style={{ paddingTop: 50 }}\n                >\n                  Leave your thoughts\n                </Typography>\n                <div className={classes.rating}>\n                  <Typography\n                    component=\"legend\"\n                    variant=\"body1\"\n                    color=\"textSecondary\"\n                  >\n                    FAVORITE THIS MOVIE:\n                  </Typography>\n                  <IconButton\n                    aria-label=\"add to favorites\"\n                    color={favorite ? \"secondary\" : \"#bdbdbd\"}\n                    onClick={(e) => handleFavorite(e)}\n                  >\n                    <FavoriteIcon />\n                  </IconButton>\n                </div>\n              </>\n            ) : null}\n            {inDatabase ? (\n              <></>\n            ) : (\n              <div style={{ paddingTop: 50 }}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={(e) => handleAdd(e)}\n                >\n                  Add to our database to review\n                </Button>\n              </div>\n            )}\n            {inDatabase && localStorage.getItem(\"username\") != null ? (\n              <>\n                <Typography\n                  component=\"legend\"\n                  variant=\"body1\"\n                  color=\"textSecondary\"\n                >\n                  YOUR RATING:\n                </Typography>\n                <div className={classes.rating}>\n                  <Rating\n                    name=\"userRating\"\n                    value={userRating}\n                    max={10}\n                    precision={0.5}\n                    onChange={(e, newValue) => {\n                      onReviewChange(e, newValue);\n                    }}\n                  />\n                  {\n                    <Box ml={1}>\n                      <Typography\n                        component=\"legend\"\n                        variant=\"h5\"\n                        style={{ color: \"#ffc107\" }}\n                      >\n                        {userRating}\n                      </Typography>\n                    </Box>\n                  }\n                </div>\n                <Typography\n                  component=\"legend\"\n                  variant=\"body1\"\n                  color=\"textSecondary\"\n                  style={{ paddingTop: 20 }}\n                >\n                  COMMENT:\n                </Typography>\n                <TextField\n                  id=\"standard-full-width\"\n                  label={\"\"}\n                  style={{ margin: 8 }}\n                  placeholder=\"Leave a comment for your review\"\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={(e) => onCommentChange(e)}\n                />\n                <div style={{ paddingTop: 20 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={(e) => {\n                      onReviewSubmit(e);\n                    }}\n                  >\n                    Submit Review\n                  </Button>\n                </div>\n              </>\n            ) : (\n              <></>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className={classes.root}>\n        <div className={classes.card}>\n          <CssBaseline>\n            <Container className={classes.reviewContainer}>\n              <Grid\n                container\n                justify=\"space-between\"\n                className={classes.spacing}\n              >\n                <Grid item>\n                  <Typography\n                    className={classes.header}\n                    variant=\"h4\"\n                    gutterBottom\n                  >\n                    Reviews\n                  </Typography>\n                </Grid>\n              </Grid>\n\n              <Review reviews={movieReviews} />\n            </Container>\n          </CssBaseline>\n        </div>\n      </div>\n    </PageBase>\n  );\n}\n\nexport default Movie;\n","/Users/nichantal/Desktop/web-final-frontend/src/components/review.jsx",["64","65","66"],"/Users/nichantal/Desktop/web-final-frontend/src/views/profile.jsx",[],{"ruleId":"67","severity":1,"message":"68","line":13,"column":10,"nodeType":"69","messageId":"70","endLine":13,"endColumn":18},{"ruleId":"67","severity":1,"message":"71","line":86,"column":12,"nodeType":"69","messageId":"70","endLine":86,"endColumn":24},{"ruleId":"67","severity":1,"message":"72","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"74","line":38,"column":6,"nodeType":"75","endLine":38,"endColumn":8,"suggestions":"76"},{"ruleId":"67","severity":1,"message":"77","line":2,"column":3,"nodeType":"69","messageId":"70","endLine":2,"endColumn":7},{"ruleId":"67","severity":1,"message":"78","line":3,"column":3,"nodeType":"69","messageId":"70","endLine":3,"endColumn":12},{"ruleId":"67","severity":1,"message":"79","line":5,"column":3,"nodeType":"69","messageId":"70","endLine":5,"endColumn":17},{"ruleId":"67","severity":1,"message":"80","line":6,"column":3,"nodeType":"69","messageId":"70","endLine":6,"endColumn":14},{"ruleId":"67","severity":1,"message":"81","line":8,"column":3,"nodeType":"69","messageId":"70","endLine":8,"endColumn":14},{"ruleId":"67","severity":1,"message":"82","line":16,"column":3,"nodeType":"69","messageId":"70","endLine":16,"endColumn":11},{"ruleId":"67","severity":1,"message":"83","line":17,"column":3,"nodeType":"69","messageId":"70","endLine":17,"endColumn":7},{"ruleId":"73","severity":1,"message":"84","line":128,"column":6,"nodeType":"75","endLine":128,"endColumn":8,"suggestions":"85"},{"ruleId":"67","severity":1,"message":"86","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":26},{"ruleId":"67","severity":1,"message":"72","line":1,"column":28,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},{"ruleId":"67","severity":1,"message":"87","line":6,"column":3,"nodeType":"69","messageId":"70","endLine":6,"endColumn":10},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'onTitleClick' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchValue'. Either include it or remove the dependency array.","ArrayExpression",["88"],"'Card' is defined but never used.","'CardMedia' is defined but never used.","'CardActionArea' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'ListItem' is defined but never used.","'List' is defined but never used.","React Hook useEffect has a missing dependency: 'movieName'. Either include it or remove the dependency array.",["89"],"'useEffect' is defined but never used.","'Divider' is defined but never used.",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [searchValue]",{"range":"94","text":"95"},"Update the dependencies array to be: [movieName]",{"range":"96","text":"97"},[1053,1055],"[searchValue]",[3338,3340],"[movieName]"]